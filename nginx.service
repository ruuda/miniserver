# Miniserver NGINX unit, based on upstream at
# https://www.nginx.com/resources/wiki/start/topics/examples/systemd/.

[Unit]
Description=The NGINX HTTP and reverse proxy server
After=network.target nss-lookup.target

[Service]
Type=forking
PIDFile=/run/nginx.pid
ExecStartPre=/usr/bin/nginx -t
ExecStart=/usr/bin/nginx
ExecReload=/usr/bin/nginx -s reload
ExecStop=/bin/kill -s QUIT $MAINPID
PrivateTmp=true
User=nobody

RootImage=/home/ruud/repos/miniserver/miniserver.img
# MountAPIVFS=true
# PrivateUsers=true
# PrivateDevices=true
MemoryDenyWriteExecute=true
# BindReadOnlyPaths=/etc

# TODO: Setting DynamicUser= appears to break LogsDirectory= with a "no such
# file or directory" error from systemd, though I think it should work. Diagnose
# what goes wrong.
# DynamicUser=true

# The squashfs file system is read-only. Mount a tmpfs for Nginx to write the
# pidfile to.
TemporaryFileSystem=/run

#ProtectKernelTunables=true
#ProtectControlGroups=true

# Note: Setting ProtectSystem= has no advantage, as the squashfs filesystem is
# already read-only. Similarly, ProtectHome= is not useful because the paths it
# protect do not exist in our filesystem.

# TODO: Systemd only makes the directories below /var/log/nginx owned by the
# user specified in the User=, but not the directory itself. That prevents nginx
# from writing there. Find a cleaner solution than this.
LogsDirectory=nginx/systemdworkaround

[Install]
WantedBy=multi-user.target
