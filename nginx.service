# Miniserver NGINX unit, based on upstream at
# https://www.nginx.com/resources/wiki/start/topics/examples/systemd/.

[Unit]
Description=The NGINX HTTP and reverse proxy server
After=network.target nss-lookup.target

[Service]
ExecStartPre=/usr/bin/nginx -t
ExecStart=/usr/bin/nginx
PrivateTmp=true
User=nobody

# When stopping the unit, send SIGQUIT to the main process (which causes Nginx
# to shut down gracefully), and don't send anything to other processes. If the
# process has not shut down after a timeout, send SIGKILL to all processes.
KillMode=mixed
KillSignal=SIGQUIT

RootImage=/home/ruud/repos/miniserver/miniserver.img
MountAPIVFS=true

# PrivateUsers=true
# PrivateDevices=true
MemoryDenyWriteExecute=true
DynamicUser=true

# Ensure that the process can never gain new priviliges through execve.
NoNewPrivileges=true
#ProtectKernelTunables=true
#ProtectControlGroups=true

# Allow binding to priviliged ports (e.g. 80 and 443) as non-root user.
AmbientCapabilities=CAP_NET_BIND_SERVICE

# Note: Setting ProtectSystem= has no advantage, as the squashfs filesystem is
# already read-only. Similarly, ProtectHome= is not useful because the paths it
# protect do not exist in our filesystem.

# Bind-mount /var/log/nginx and inside the chroot. Systemd will ensure that the
# logs directory exists.
LogsDirectory=nginx

# Bind-mount /etc/nginx and /var/www inside the chroot as read-only.
# TODO: Should mount /var/www from the host, but this is just to test.
BindReadOnlyPaths=/etc/nginx
BindReadOnlyPaths=/home/ruud/repos/blog/out:/var/www

[Install]
WantedBy=multi-user.target
